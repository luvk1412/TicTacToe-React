{"ast":null,"code":"import _slicedToArray from \"/home/luv/TicTacToe-React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/luv/TicTacToe-React/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: () => props.onClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    if (this.state.xIsNext) {\n      squares[i] = 'X';\n    } else {\n      squares[i] = 'O';\n    }\n\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history.slice(0, this.state.stepNumber);\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const description = move ? 'Go to move # ' + move : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, description));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner : ' + winner;\n    } else {\n      status = 'Next Player : ' + (this.state.xIsNext ? 'X' : ' O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/luv/TicTacToe-React/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","calculateWinner","lines","length","a","b","c","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","current","slice","setState","concat","jumpTo","step","winner","moves","map","move","description","status","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={() => props.onClick() }>\n            {props.value}\n        </button>\n    );\n}\n  \nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square \n                value = {this.props.squares[i]}\n                onClick = {()=>this.props.onClick(i)} \n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n}\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history : [{\n                squares : Array(9).fill(null),\n            }],\n            stepNumber : 0,\n            xIsNext : true,\n        }\n    }\n    handleClick(i){\n        const history = this.state.history;\n        const current = history[history.length-1];\n        const squares = current.squares.slice();\n        if(calculateWinner(squares) ||  squares[i]){\n            return;\n        }\n        if(this.state.xIsNext){\n            squares[i] = 'X';\n        }\n        else{\n            squares[i] = 'O';\n        }\n        this.setState({\n            history : history.concat([{\n                squares:squares,\n            }]),\n            stepNumber : history.length,\n            xIsNext : !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step){\n        this.setState({\n            stepNumber : step,\n            xIsNext : (step % 2) === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history.slice(0, this.state.stepNumber );\n        const current = history[history.length-1];\n        const winner = calculateWinner(current.squares);\n        const moves = history.map((step,move) => {\n            const description = move ? 'Go to move # ' + move : 'Go to game start';\n            return (\n                <li key ={move}>\n                    <button onClick={()=>{\n                        this.setState({\n                            stepNumber : step,\n                            xIsNext : (step % 2) === 0,\n                        });\n                    }}>{description}</button>\n                </li>\n            ) \n        });\n\n        let status;\n        if(winner){\n            status = 'Winner : ' + winner;\n        }\n        else{\n            status = 'Next Player : ' + (this.state.xIsNext ? 'X' : ' O');\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);  "]},"metadata":{},"sourceType":"module"}